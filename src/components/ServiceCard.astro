---
export interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
  price?: string;
  duration?: string;
  isPopular?: boolean;
}

const {
  title,
  description,
  icon,
  features,
  price,
  duration,
  isPopular = false,
} = Astro.props;
---

<div
  class={`relative bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 p-8 ${isPopular ? "ring-2 ring-amber-500" : ""}`}
>
  {
    isPopular && (
      <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
        <span class="bg-gradient-to-r from-amber-500 to-orange-500 text-white px-4 py-2 rounded-full text-sm font-semibold">
          Most Popular
        </span>
      </div>
    )
  }

  <div class="text-center mb-6">
    <div
      class="w-16 h-16 bg-gradient-to-br from-amber-400 to-orange-400 rounded-full flex items-center justify-center mx-auto mb-4"
    >
      <div class="text-white w-8 h-8" set:html={icon}></div>
    </div>
    <h3 class="text-2xl font-bold text-orange-700 mb-3">{title}</h3>
    <p class="text-orange-600 leading-relaxed">{description}</p>
  </div>

  {
    price && (
      <div class="text-center mb-6">
      </div>
    )
  }

  <ul class="space-y-3 mb-8">
    {
      features.map((feature) => (
        <li class="flex items-start">
          <svg
            class="w-5 h-5 text-amber-500 mt-0.5 mr-3 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <circle cx="10" cy="10" r="8" />
          </svg>
          <span class="text-orange-700">{feature}</span>
        </li>
      ))
    }
  </ul>

  <a href="/services" class="block">
    <button
      class="w-full bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
      type="button"
    >
      Get Started
    </button>
  </a>
</div>
